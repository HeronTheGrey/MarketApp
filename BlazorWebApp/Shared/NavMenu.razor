@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime JSRuntime
@using BlazorWebApp.Authentication
@using Microsoft.AspNetCore.Components.Authorization

<nav class="sidebar">
    <h2>MauiMarket</h2>
    
    <div class="nav-item px-3">
        <AuthorizeView>
            <Authorized>
                <button @onclick="Logout">Wyloguj</button>
            </Authorized>
            <NotAuthorized>
                <button @onclick="GoToLogin">Zaloguj się</button>
                <button @onclick="GoToRegister">Rejestracja</button>
            </NotAuthorized>
        </AuthorizeView>
        <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
            <span class="oi oi-home" aria-hidden="true"></span> Strona główna
        </NavLink>
    </div>
    <div class="nav-item px-3">
        <NavLink class="nav-link" href="add-product">
            <span class="oi oi-plus" aria-hidden="true"></span> Dodaj produkt
        </NavLink>
    </div>
</nav>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private async void Logout()
    {
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "authToken");
        if (AuthenticationStateProvider is CustomAuthStateProvider authProvider)
        {
            authProvider.NotifyUserLogout();
        }

        Navigation.NavigateTo("/");
    }

    private void GoToLogin()
    {
        Navigation.NavigateTo("/login");
    }

    private void GoToRegister()
    {
        Navigation.NavigateTo("/register");
    }

}
